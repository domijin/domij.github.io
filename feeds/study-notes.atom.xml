<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Domi's Universe - study-notes</title><link href="http://dxj4360.uta.cloud/" rel="alternate"></link><link href="http://dxj4360.uta.cloud/feeds/study-notes.atom.xml" rel="self"></link><id>http://dxj4360.uta.cloud/</id><updated>2018-07-17T00:00:00-05:00</updated><entry><title>Disrupting Yourself for greater</title><link href="http://dxj4360.uta.cloud/disrupting-yourself-for-greater.html" rel="alternate"></link><published>2018-07-17T00:00:00-05:00</published><updated>2018-07-17T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2018-07-17:/disrupting-yourself-for-greater.html</id><summary type="html">&lt;p&gt;This is what I learned from &lt;a href="https://www.linkedin.com/learning/disrupting-yourself/stepping-back-or-sideways-to-move-forward"&gt;Video Link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;h2&gt;Disrupted innovation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Taking the right risks&lt;ul&gt;
&lt;li&gt;Look at what others are not doing: open new doors instead of red seas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Distinctive strength&lt;ul&gt;
&lt;li&gt;Do the job well then focus: principle&lt;/li&gt;
&lt;li&gt;People appreciate but you dismiss: awareness, stay passionate&lt;/li&gt;
&lt;li&gt;Self fulfilled: enthustic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Embracing …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This is what I learned from &lt;a href="https://www.linkedin.com/learning/disrupting-yourself/stepping-back-or-sideways-to-move-forward"&gt;Video Link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;h2&gt;Disrupted innovation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Taking the right risks&lt;ul&gt;
&lt;li&gt;Look at what others are not doing: open new doors instead of red seas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Distinctive strength&lt;ul&gt;
&lt;li&gt;Do the job well then focus: principle&lt;/li&gt;
&lt;li&gt;People appreciate but you dismiss: awareness, stay passionate&lt;/li&gt;
&lt;li&gt;Self fulfilled: enthustic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Embracing constraints&lt;ul&gt;
&lt;li&gt;Understand the constraints and head on to it: challenge the edges&lt;/li&gt;
&lt;li&gt;Limit induces creation: change leads to breakthrough&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Battling entitlement&lt;ul&gt;
&lt;li&gt;Don't take for granted &lt;/li&gt;
&lt;li&gt;Feel hungry&lt;/li&gt;
&lt;li&gt;Be open to differences&lt;/li&gt;
&lt;li&gt;Appreciate the under-appreciated&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Step back to grow&lt;ul&gt;
&lt;li&gt;Step out of comfort zone: be aware not to settle&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fail&lt;ul&gt;
&lt;li&gt;Don't fear: learn and move on&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Let your strategy emerge&lt;ul&gt;
&lt;li&gt;Find your metrics: set scale and goal&lt;/li&gt;
&lt;li&gt;Show up, practice: try and improve&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="study-notes"></category></entry><entry><title>Quantum Computing</title><link href="http://dxj4360.uta.cloud/quantum-computing.html" rel="alternate"></link><published>2018-07-01T00:00:00-05:00</published><updated>2018-07-01T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2018-07-01:/quantum-computing.html</id><summary type="html">&lt;h2&gt;Quantum Computing &amp;amp; Neural Networks&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.quantiki.org/wiki/basic-concepts-quantum-computation"&gt;basic concepts&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Superposition: &lt;span class="math"&gt;\(\ket{+}, \ket{-}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Phase: &lt;span class="math"&gt;\(T\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Bloch Sphere&lt;/li&gt;
&lt;li&gt;Decoherence&lt;ul&gt;
&lt;li&gt;Energy relaxation: &lt;span class="math"&gt;\(T_1 := \ket{1} \rightarrow \ket{0}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Dephasing: &lt;span class="math"&gt;\(T_2\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://xxx.lanl.gov/list/quant-ph/recent"&gt;New ArXiv papers in quantum physics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oxfordquantum.org/"&gt;Research in Oxford Quantum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;IBM Open Quantum&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.research.ibm.com/ibm-q/"&gt;ibm-q&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&amp;amp;page=000-FAQ_for_Beginners~2F001-FAQ_for_Beginners"&gt;beginner's guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=full-user-guide&amp;amp;page=introduction"&gt;user guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/QISKit/qiskit-terra"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenQasm Input&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// My First …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;Quantum Computing &amp;amp; Neural Networks&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.quantiki.org/wiki/basic-concepts-quantum-computation"&gt;basic concepts&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Superposition: &lt;span class="math"&gt;\(\ket{+}, \ket{-}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Phase: &lt;span class="math"&gt;\(T\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Bloch Sphere&lt;/li&gt;
&lt;li&gt;Decoherence&lt;ul&gt;
&lt;li&gt;Energy relaxation: &lt;span class="math"&gt;\(T_1 := \ket{1} \rightarrow \ket{0}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Dephasing: &lt;span class="math"&gt;\(T_2\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://xxx.lanl.gov/list/quant-ph/recent"&gt;New ArXiv papers in quantum physics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://oxfordquantum.org/"&gt;Research in Oxford Quantum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;IBM Open Quantum&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.research.ibm.com/ibm-q/"&gt;ibm-q&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=beginners-guide&amp;amp;page=000-FAQ_for_Beginners~2F001-FAQ_for_Beginners"&gt;beginner's guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=full-user-guide&amp;amp;page=introduction"&gt;user guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/QISKit/qiskit-terra"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OpenQasm Input&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;// My First Score&lt;/span&gt;
&lt;span class="n"&gt;OPENQASM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;qelib1.inc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// Register declarations&lt;/span&gt;
&lt;span class="n"&gt;qreg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;creg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;// Quantum Circuit&lt;/span&gt;
&lt;span class="c1"&gt;// Pauli operations &lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;// Clifford operations&lt;/span&gt;
&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;sdg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;cx&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;// non-Clifford operations&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;tdg&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="c1"&gt;// measurement operations&lt;/span&gt;
&lt;span class="n"&gt;measure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# my_first_score.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;qiskit&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;QuantumCircuit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;QuantumRegister&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ClassicalRegister&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;

&lt;span class="c1"&gt;# Define the Quantum and Classical Registers&lt;/span&gt;
&lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QuantumRegister&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ClassicalRegister&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Build the circuit&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QuantumCircuit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Pauli operations &lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Clifford operations&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# non-Clifford operations&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barrier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# measurement operations&lt;/span&gt;
&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;measure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Execute the circuit&lt;/span&gt;
&lt;span class="n"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;local_qasm_simulator&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shots&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Print the result&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_first_score&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Operations&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;X&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;control&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;CNOT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;gate&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;eiπ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;H&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;√&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;−&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Hadamard&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;gate&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;Z&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;−&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;S&lt;/span&gt;†&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;−&lt;span class="nv"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;†&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;e&lt;/span&gt;−&lt;span class="nv"&gt;iπ&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="nv"&gt;T&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nv"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt;−&lt;span class="nv"&gt;i0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;&lt;span class="nv"&gt;XZ&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Quantum Algorithms&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Shor%27s_algorithm"&gt;Shor's algorithm&lt;/a&gt;: ordering, factoring&lt;ul&gt;
&lt;li&gt;period finding: modular exponential function, &lt;span class="math"&gt;\(a^r = 1 (\mod N)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;steps&lt;/li&gt;
&lt;li&gt;pick &lt;span class="math"&gt;\(a\)&lt;/span&gt;, compute &lt;span class="math"&gt;\(\gcd(N,a)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;if not co-prime&lt;ul&gt;
&lt;li&gt;do find period &lt;span class="math"&gt;\(r\)&lt;/span&gt; so that &lt;span class="math"&gt;\(a^r = 1 (\mod N)\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;until &lt;span class="math"&gt;\(r\)&lt;/span&gt; is even&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;check &lt;span class="math"&gt;\(\gcd(a^{r/2}\pm 1, N)\)&lt;/span&gt; for prime factor&lt;/li&gt;
&lt;li&gt;quadratic sieve method &lt;span class="math"&gt;\(\exp(d^{1/3})\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quantumexperience.ng.bluemix.net/qx/tutorial?sectionId=full-user-guide&amp;amp;page=004-Quantum_Algorithms~2F070-Grover%27s_Algorithm"&gt;Grover's algorithm&lt;/a&gt;: reflection^n to amplify the matched state&lt;/li&gt;
&lt;li&gt;Quantum Annealing &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Technicals&lt;/h3&gt;
&lt;p&gt;Building blocks
- &lt;a href="https://www.quora.com/What-is-the-equivalent-of-the-transistor-in-a-quantum-computer"&gt;Discussion of transistor&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Neruoscience&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ncbi.nlm.nih.gov/pubmedhealth/PMH0072574/"&gt;brief about nervous system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ncbi.nlm.nih.gov/pubmedhealth/PMHT0024269/"&gt;neurons&lt;/a&gt;: chemical interactions between neurons as communication, not fixed, multi-connected&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ideas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;3D transistor to resemble neuro, spiking instead&lt;/li&gt;
&lt;li&gt;growing network, mimic brain development, let network layers to change &amp;amp; train&lt;ul&gt;
&lt;li&gt;biological growing: &lt;a href="https://www.encyclopedia.com/science/news-wires-white-papers-and-books/growth-and-differentiation-nervous-system"&gt;nervous system growth&lt;/a&gt;, need to study human baby&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2989000/"&gt;timeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;day 13: &lt;img alt="" src="https://www.ncbi.nlm.nih.gov/books/NBK234146/bin/img00018.jpg"&gt;&lt;/li&gt;
&lt;li&gt;embryonic day 42 - midgestation: establishing rudimentary neural networks&lt;/li&gt;
&lt;li&gt;3rd gestational week: differentiation of neural progenitor cells&lt;/li&gt;
&lt;li&gt;8th GW: rudimentary structures of the brain and central nervous system&lt;/li&gt;
&lt;li&gt;rapid growth and elaboration&lt;/li&gt;
&lt;li&gt;end of the prenatal period: major fiber pathways complete&lt;/li&gt;
&lt;li&gt;before preschool: increases in size by four-fold &lt;/li&gt;
&lt;li&gt;by age 6: ~ 90% of adult, structural changes continue&lt;/li&gt;
&lt;li&gt;100GB neurons, 60TB connections: ~ 600 link per neuron, multiple-in-guided-one-out&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;distribution out + spiking activation&lt;/li&gt;
&lt;li&gt;sectioning during training: vision, language, motion and so on. develop as grow, over the cause of infant&lt;ul&gt;
&lt;li&gt;self-sectioning: train as needed&lt;/li&gt;
&lt;li&gt;resonance ignition: transfer learning &amp;amp; creativity&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="study-notes"></category></entry><entry><title>Data Management @ LSST</title><link href="http://dxj4360.uta.cloud/data-management-lsst.html" rel="alternate"></link><published>2017-10-19T00:00:00-05:00</published><updated>2017-10-19T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-10-19:/data-management-lsst.html</id><summary type="html">&lt;p&gt;4/24/17&lt;/p&gt;
&lt;h3&gt;SQLite with python&lt;/h3&gt;
&lt;p&gt;Basic operation syntax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlite3&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reintro.db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;creat&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;create table PetInfo(&lt;/span&gt;
&lt;span class="s2"&gt;                                    Name text, &lt;/span&gt;
&lt;span class="s2"&gt;                                    Species text,&lt;/span&gt;
&lt;span class="s2"&gt;                                    Age tinyint,&lt;/span&gt;
&lt;span class="s2"&gt;                                    FavoriteFood text&lt;/span&gt;
&lt;span class="s2"&gt;                                    )&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;      
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;drop …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;4/24/17&lt;/p&gt;
&lt;h3&gt;SQLite with python&lt;/h3&gt;
&lt;p&gt;Basic operation syntax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlite3&lt;/span&gt;
&lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;reintro.db&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;cur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;creat&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;operations&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;create table PetInfo(&lt;/span&gt;
&lt;span class="s2"&gt;                                    Name text, &lt;/span&gt;
&lt;span class="s2"&gt;                                    Species text,&lt;/span&gt;
&lt;span class="s2"&gt;                                    Age tinyint,&lt;/span&gt;
&lt;span class="s2"&gt;                                    FavoriteFood text&lt;/span&gt;
&lt;span class="s2"&gt;                                    )&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetchall&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;cursor&lt;/span&gt;      
&lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;commit&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;database&lt;/span&gt;
&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;drop table if exists xxx&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# drop the table if is already exists&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;SDSS  API&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;astroquery.sdss&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SDSS&lt;/span&gt;
&lt;span class="n"&gt;SDSS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query_sql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&amp;quot;select top 20 * from PhotoObjAll&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;demonstration of Join:
&lt;img src="https://www.dropbox.com/s/c8tutz6p5f9gvmj/Screenshot%202017-04-24%2011.29.49.png?raw=1" /&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;4/25/17&lt;/p&gt;
&lt;h2&gt;SQL byYusra AlSayyad&lt;/h2&gt;
&lt;p&gt;Data Management: building database, storing data&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL database&lt;/li&gt;
&lt;li&gt;Relational Algebra, not good for graph structure&lt;/li&gt;
&lt;li&gt;combined -&amp;gt; pandas by Wes McKinney&lt;/li&gt;
&lt;li&gt;TOPCAT: Relational database with uncertainty&lt;/li&gt;
&lt;li&gt;Indexing: optimize data extracture and slicing&lt;/li&gt;
&lt;li&gt;hierarchical triangular mesh, reduce 2D to 1D for GIS indexing &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL examples for inspiration&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;database&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mysql_demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mysql_demo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;personId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;firstName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;lastName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;phoneNumber&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Publication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;pubId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;journalName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Cameron&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hummels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1234567890&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1234567890&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Publication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Stuff about stars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apj&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Publication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;VALUES&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Stuff about galaxies&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Apj&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TABLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;relational&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dababase&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;personId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;pubId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INTO&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;VALUE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;102&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publication&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;INNER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Authorship&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pubId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pubId&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;INNER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;personId&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;personId&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;INDEX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;On&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TOP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ra&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;dec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rerun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;camcol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;specobjid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;redshift&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mjd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fiberid&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PhotoObj&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SpecObj&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AS&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bestobjid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BETWEEN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BETWEEN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;AND&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;photoobjall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;inner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;join&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ROSAT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_z&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;photoobjall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rosat&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_g&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cModelFlux_z&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;LEFT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;JOIN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specobjall&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ON&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bestobjid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bestobjid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;GROUP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="k"&gt;ORDER&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;BY&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;DEC&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;4/26/17&lt;/p&gt;
&lt;h2&gt;Data Management: extracting data&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Scaling up -&amp;gt; scaling out&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hardware Architecture&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Parallel RDMS Architecture: shared nothing&lt;/li&gt;
&lt;li&gt;Partitioning: spatical indexing&lt;ul&gt;
&lt;li&gt;fast extracting regional data in high dimension&lt;/li&gt;
&lt;li&gt;random distribute data based on hash table to balance load&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Shared scanning&lt;/li&gt;
&lt;li&gt;Fault tolerance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Software&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spark, HDFS solution&lt;/li&gt;
&lt;li&gt;Hadoop Distributed Files System, HDFS&lt;/li&gt;
&lt;li&gt;MapReduce&lt;/li&gt;
&lt;li&gt;Relation (shcema)&lt;/li&gt;
&lt;li&gt;Indexing&lt;/li&gt;
&lt;li&gt;Eventually -&amp;gt; &lt;code&gt;database&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NoSQL: not only SQL, non-relational (no schema)&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;DynamoDB&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;li&gt;Aggregation-oriented database&lt;/li&gt;
&lt;li&gt;pros: same type of aggregated data&lt;/li&gt;
&lt;li&gt;cons: hard to slice and dice&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/lsst/qserv"&gt;LSST QSERV&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;10/19/17&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;
&lt;em&gt; &lt;a href="https://sqlnotebook.com/index.html"&gt;SQL notebook&lt;/a&gt;
&lt;/em&gt; &lt;a href="https://www.khanacademy.org/computing/computer-programming/sql/more-advanced-sql-queries/p/calculating-results-with-case"&gt;SQL course on KhanAcademy&lt;/a&gt;&lt;/p&gt;</content><category term="study-notes"></category></entry><entry><title>Machine Learning with MLLib and GraphX @ TACC</title><link href="http://dxj4360.uta.cloud/machine-learning-with-mllib-and-graphx-tacc.html" rel="alternate"></link><published>2017-05-04T00:00:00-05:00</published><updated>2017-05-04T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-05-04:/machine-learning-with-mllib-and-graphx-tacc.html</id><summary type="html">&lt;p&gt;&lt;a href="mailto:zzhang@tacc.utexas.edu"&gt;Zhao Zhang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/j5mdtxswiolz26a/Screenshot%202017-05-05%2012.02.05.png?raw=1" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supervised Learning&lt;/li&gt;
&lt;li&gt;Linear Regression&lt;/li&gt;
&lt;li&gt;Classification&lt;ul&gt;
&lt;li&gt;Logistic Regression&lt;/li&gt;
&lt;li&gt;Support Vector Machine: good for non-linear classification&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unsupervised Learning&lt;/li&gt;
&lt;li&gt;Lower dimension representation&lt;ul&gt;
&lt;li&gt;Principle Component Analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spare representation&lt;ul&gt;
&lt;li&gt;K-Means&lt;/li&gt;
&lt;li&gt;Gaussian Mixture Models&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Independent representation&lt;ul&gt;
&lt;li&gt;Principle Component Analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cost Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Regularization&lt;/li&gt;
&lt;li&gt;Maximum Likelihood&lt;/li&gt;
&lt;li&gt;KL divergence&lt;/li&gt;
&lt;li&gt;cross-entropy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Graph Processing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;frameworks&lt;/li&gt;
&lt;li&gt;PageRank: direct graph by …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;a href="mailto:zzhang@tacc.utexas.edu"&gt;Zhao Zhang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/j5mdtxswiolz26a/Screenshot%202017-05-05%2012.02.05.png?raw=1" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supervised Learning&lt;/li&gt;
&lt;li&gt;Linear Regression&lt;/li&gt;
&lt;li&gt;Classification&lt;ul&gt;
&lt;li&gt;Logistic Regression&lt;/li&gt;
&lt;li&gt;Support Vector Machine: good for non-linear classification&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Unsupervised Learning&lt;/li&gt;
&lt;li&gt;Lower dimension representation&lt;ul&gt;
&lt;li&gt;Principle Component Analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spare representation&lt;ul&gt;
&lt;li&gt;K-Means&lt;/li&gt;
&lt;li&gt;Gaussian Mixture Models&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Independent representation&lt;ul&gt;
&lt;li&gt;Principle Component Analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cost Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Regularization&lt;/li&gt;
&lt;li&gt;Maximum Likelihood&lt;/li&gt;
&lt;li&gt;KL divergence&lt;/li&gt;
&lt;li&gt;cross-entropy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Graph Processing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;frameworks&lt;/li&gt;
&lt;li&gt;PageRank: direct graph by Google&lt;/li&gt;
&lt;li&gt;Pregel&lt;/li&gt;
&lt;li&gt;Giraph&lt;/li&gt;
&lt;li&gt;GraphLab&lt;/li&gt;
&lt;li&gt;GraphX&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;GraphX&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;GraphX abstracts a graph with an RDD of vertices and an RDD of edges&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spark.apache.org/docs/0.9.1/graphx-programming-guide.html"&gt;graphx from Apache Spark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/y809vf5vyv07q6y/Screenshot%202017-05-05%2012.58.52.png?raw=1" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connectd Components: &lt;code&gt;org.apache.spark.graphx.lib.connectedComponents&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Triangle Counting: &lt;code&gt;org.apache.spark.graphx.lib.triangleCount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Shortest Paths: &lt;code&gt;org.apache.spark.graphx.lib.Shortestpaths&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="study-notes"></category></entry><entry><title>Scala/Spark @ TACC</title><link href="http://dxj4360.uta.cloud/scalaspark-tacc.html" rel="alternate"></link><published>2017-05-04T00:00:00-05:00</published><updated>2017-05-04T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-05-04:/scalaspark-tacc.html</id><summary type="html">&lt;p&gt;4/20/17 &lt;/p&gt;
&lt;h2&gt;Introduction to Hadoop and Spark&lt;/h2&gt;
&lt;p&gt;Dr. Weijia Xu, Dr. Ruizhu Huang @ UTA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop and Spark on Wrangler&lt;/li&gt;
&lt;li&gt;Scala/Spark&lt;/li&gt;
&lt;li&gt;Data Analysis Using Hadoop/Spark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/bnoc10ju03mzgk6/Screenshot%202017-04-20%2013.33.00.png?raw=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=KByS8QYpamw"&gt;Webcast&lt;/a&gt;
&lt;a href="https://public.etherpad-mozilla.org/p/Intro_Hadoop_and_Spark_on_Wrangler"&gt;Discussion&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Big Data v.s. HPC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Traditional&lt;/li&gt;
&lt;li&gt;separate data&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPI code to use multiple nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MapReduce: programing model, platform for customized computation …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;4/20/17 &lt;/p&gt;
&lt;h2&gt;Introduction to Hadoop and Spark&lt;/h2&gt;
&lt;p&gt;Dr. Weijia Xu, Dr. Ruizhu Huang @ UTA&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hadoop and Spark on Wrangler&lt;/li&gt;
&lt;li&gt;Scala/Spark&lt;/li&gt;
&lt;li&gt;Data Analysis Using Hadoop/Spark&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/bnoc10ju03mzgk6/Screenshot%202017-04-20%2013.33.00.png?raw=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=KByS8QYpamw"&gt;Webcast&lt;/a&gt;
&lt;a href="https://public.etherpad-mozilla.org/p/Intro_Hadoop_and_Spark_on_Wrangler"&gt;Discussion&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Big Data v.s. HPC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Traditional&lt;/li&gt;
&lt;li&gt;separate data&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPI code to use multiple nodes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MapReduce: programing model, platform for customized computation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;move computations to data, reduce data transfer&lt;/li&gt;
&lt;li&gt;sequential execute, same as RDBMS&lt;/li&gt;
&lt;li&gt;scale out, not scale up&lt;/li&gt;
&lt;li&gt;hardware indepedent&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hadoop&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;distributed data&lt;/li&gt;
&lt;li&gt;key-value pair&lt;/li&gt;
&lt;li&gt;computation&lt;/li&gt;
&lt;li&gt;map instances&lt;/li&gt;
&lt;li&gt;reduce instances&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/yn0bhgwvc0nui9n/Screenshot%202017-04-20%2013.28.13.png?raw=1" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;support at TACC&lt;/strong&gt;
&lt;em&gt; hadoop: open source implementation of MapReduce, programming in JAVA but interface to others
&lt;/em&gt; zeppelin: similiar to jupyter, hundreds of interpretator
* spark, in-memory&lt;/p&gt;
&lt;h2&gt;Hadoop and Yarn&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/62m198hltjwt154/Screenshot%202017-04-20%2013.37.51.png?raw=1"  /&gt;&lt;/p&gt;
&lt;h3&gt;Procedure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;input&lt;/li&gt;
&lt;li&gt;splitting&lt;/li&gt;
&lt;li&gt;mapping&lt;/li&gt;
&lt;li&gt;shuffling&lt;/li&gt;
&lt;li&gt;reducing&lt;/li&gt;
&lt;li&gt;final result&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://portal.wrangler.tacc.utexas.edu/"&gt;Wrangler portal&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Manage -&amp;gt; create hadoop reservation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;VNC job: access VNC at &lt;code&gt;vis.tacc.utexas.edu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;check cluster info. and hadoop job status&lt;/li&gt;
&lt;li&gt;idev job&lt;/li&gt;
&lt;li&gt;manage data in &amp;amp; out&lt;/li&gt;
&lt;li&gt;submit Hadoop jobs&lt;/li&gt;
&lt;li&gt;test, dev, debug&lt;/li&gt;
&lt;li&gt;batch job: submit jobs to YARN resource manager&lt;/li&gt;
&lt;li&gt;large analysis job&lt;/li&gt;
&lt;li&gt;sequentially jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# manage&lt;/span&gt;
&lt;span class="c1"&gt;## check reservation&lt;/span&gt;
scontrol show reservation

&lt;span class="c1"&gt;## load module and idev to compute node&lt;/span&gt;
module load hadoop-paths
idev –r hadoop+TRAINING-HPC+2186 –m &lt;span class="m"&gt;240&lt;/span&gt; –p hadoop  &lt;span class="c1"&gt;# -m for minutes&lt;/span&gt;

&lt;span class="c1"&gt;## file system operations&lt;/span&gt;
hadoop fs -ls/mkdir/put/get/stat/cat/tail/setrep &lt;span class="c1"&gt;#set replication factor&lt;/span&gt;

&lt;span class="c1"&gt;## YARN, run jobs&lt;/span&gt;
yarn jar / hadoop jar &lt;span class="c1"&gt;# for java&lt;/span&gt;
yarn application -list/kill/appStates/appTypes
     node -list
     logs

&lt;span class="c1"&gt;## upload data&lt;/span&gt;
hadoop fs -put local_data data

&lt;span class="c1"&gt;## running hadoop&lt;/span&gt;
hadoop jar /usr/lib/hadoop-mapreduce/hadoop-mapreduce- examples.jar &lt;span class="se"&gt;\&lt;/span&gt;
wordcount &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;#java class name to run&lt;/span&gt;
-D mapred.map.tasks&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;#number of mapper instance &lt;/span&gt;
-D mapred.reduce.tasks&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;# number of reducer instance&lt;/span&gt;
/tmp/data/enwiki-20120104-pages-articles.xml &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;#input file on hdfs&lt;/span&gt;
wiki_wc &lt;span class="c1"&gt;#folder to store the output&lt;/span&gt;

&lt;span class="c1"&gt;## get results&lt;/span&gt;
hadoop fs –get /tmp/wiki_wc wiki_wc
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Hadoop API&lt;/h2&gt;
&lt;p&gt;Check example at &lt;code&gt;/Users/domi/Dropbox/Open_Course/TACC webinars/Hadoop_Spark/hadoop-training&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recap of hadoop streaming&lt;/span&gt;
hadoop jar /usr/lib/hadoop-mapreduce/hadoop-streaming.jar
-input /path/to/input/in/hdfs
-output /path/to/output/in/hdfs
-D mapred.map.tasks&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;500&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;#number of mapper instance &lt;/span&gt;
-D mapred.reduce.tasks&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;256&lt;/span&gt; &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="c1"&gt;# number of reducer instance&lt;/span&gt;
-mapper map_implementation  &lt;span class="c1"&gt;## can use other languages&lt;/span&gt;
-reducer reduce_implementation
-file map system
-file reduce system.
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;vs Spark&lt;/h3&gt;
&lt;p&gt;&lt;img src="https://www.dropbox.com/s/a5kv07y2p7e68we/Screenshot%202017-04-20%2015.10.53.png?raw=1" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spark is faster&lt;/li&gt;
&lt;li&gt;more language support&lt;/li&gt;
&lt;li&gt;MLib for Machine Learning&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Zeppelin&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;web-based notebook&lt;/li&gt;
&lt;li&gt;interactive&lt;/li&gt;
&lt;li&gt;visualization&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Zepplelin&lt;/span&gt;
cp /data/apps/.zeppelin/job.zeppelin .
sbatch --reservation&lt;span class="o"&gt;=&lt;/span&gt;hadoop+TRAINING-HPC+2186 job.zeppelin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://wrangler.tacc.utexas.edu"&gt;web-UI&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;%spark&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;# with Python&lt;/span&gt;
&lt;span class="nf"&gt;%pyspark&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;# with R&lt;/span&gt;
&lt;span class="nf"&gt;%spark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="nf"&gt;%sh&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Contacts&lt;/h3&gt;
&lt;p&gt;&lt;a href="data@tacc.utexas.edu"&gt;Data Group @ TACC&lt;/a&gt;
&lt;a href="xwj@tacc.utexas.edu"&gt;Weijia Xu&lt;/a&gt; 
&lt;a href="rhuang@tacc.utexas.edu"&gt;Ruizhu Huang&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;04/27/2017&lt;/p&gt;
&lt;h2&gt;Programming with Scala/Spark&lt;/h2&gt;
&lt;p&gt;Zhao Zhang&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Wrangler Setup&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;idev -r hadoop+TRAINING-HPC+2187 -t &lt;span class="m"&gt;240&lt;/span&gt; 
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/apps/scala/scala-2.11.8/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Scala&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.scala-lang.org/api/2.11.8/#package"&gt;Google Scala API&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Mutable, &lt;code&gt;var&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Immutable, &lt;code&gt;val&lt;/code&gt;: cannot be reassigned&lt;/li&gt;
&lt;li&gt;Primitive types&lt;/li&gt;
&lt;li&gt;Double, Float, Long, Int, Short, Byte: &lt;code&gt;val a: Double = 5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Char, Boolean, Unit&lt;/li&gt;
&lt;li&gt;Composite variables&lt;/li&gt;
&lt;li&gt;List, Map, Seq, Set, Tuple&lt;ul&gt;
&lt;li&gt;List: immutable for length and element; mutable counter-structure: &lt;code&gt;val l = new ListBuffer[Int/Double]()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(), head, last, length, reverse, sorted&lt;/li&gt;
&lt;li&gt;Tuple: &lt;code&gt;val t = (1,2,3)&lt;/code&gt;, &lt;code&gt;t._1 &amp;gt; Int = 1&lt;/code&gt;, &lt;code&gt;val(i,j,k) = t&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Function&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(x: Int) =&amp;gt; {\n println(x) \n x * 2 \n}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;map((x: Int)/x =&amp;gt; x * 2)&lt;/code&gt; or &lt;code&gt;map(_ * 2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;multiple parameters: &lt;code&gt;x: (Int, Int) =&amp;gt; x._1 + x._1&lt;/code&gt; or &lt;code&gt;case (x,y) =&amp;gt; x+y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;multiple return: &lt;code&gt;(x: Int, y: Int) =&amp;gt; (x+3, y+5)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;name function: &lt;code&gt;def func(x: Int): Int = x * x&lt;/code&gt; as &lt;code&gt;(x: Int) =&amp;gt; x * x&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Control Flow&lt;/li&gt;
&lt;li&gt;Loop &lt;ul&gt;
&lt;li&gt;&lt;code&gt;while ( i &amp;lt; l.length ) {}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;for ( i &amp;lt;- l )&lt;/code&gt;, &lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l.foreach(x =&amp;gt; xxx )&lt;/code&gt;, &lt;code&gt;=&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l.map(x =&amp;gt; ...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If ... else ...: &lt;code&gt;l.foreach(x =&amp;gt; {if (x%2 == 1) println(x)})&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pattern matching: &lt;code&gt;l.foreach(x =&amp;gt; x%2 match {case 1 =&amp;gt; println(x)  case_ =&amp;gt; })&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Iterator&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;scalac&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scala&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;scala&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;vs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;immutable&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reassigned&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pointer&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;scala&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nn"&gt;mutable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ListBuffer&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;ListBuffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nc"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="o"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;&lt;span class="nc"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toIterator&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pointer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasNext&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;toList&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;RDD: Resilient Distributed Dataset&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;immutable, partitioned collection of elements that can be operated on in parallel&lt;/code&gt;
Programming Models
&lt;em&gt; Transformations
  * map: &lt;code&gt;val r = l.map(x =&amp;gt; x*2)&lt;/code&gt;, &lt;code&gt;List(2,4,6,8,10)&lt;/code&gt;
  * filter: &lt;code&gt;val r = l.filter(x =&amp;gt; x%2 == 0)&lt;/code&gt;, &lt;code&gt;List(2,4)&lt;/code&gt;
  * groupBy: &lt;code&gt;val r = l.groupBy(x =&amp;gt; x%2)&lt;/code&gt;, &lt;code&gt;Map(1 -&amp;gt; List(1, 3, 5), 0 -&amp;gt; List(2, 4))&lt;/code&gt;
  * textFile: &lt;code&gt;val lines = sc.textFile(“path-to-file”)&lt;/code&gt;
  * binaryFiles: &lt;code&gt;val rdd = sc.binaryFiles(“path-to-file”)&lt;/code&gt;
&lt;/em&gt; Actions
  * count: &lt;code&gt;val r = l.count(x =&amp;gt; x%2 == 0)&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;
  * collect
  * take
  * reduce
  * saveAsTextFiles&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Using Scala/Spark&lt;/h2&gt;
&lt;p&gt;Weijia Xu&lt;/p&gt;
&lt;p&gt;Start zepplin on Wrangler:
&lt;code&gt;sbatch --reservation hadoop+TRAINING-HPC+2188
-A TRAINING-HPC /data/apps/.zeppelin/job.zeppelin.work -t 240&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Data APIs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;RDD: Resilient Distributed Dataset&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdd.map(x =&amp;gt; x*2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdd.reduce(_+_)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdd.filter(_%3 == 0)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;DataFrame: since 1.3&lt;/li&gt;
&lt;li&gt;Abstract API, on top of RDD&lt;/li&gt;
&lt;li&gt;Schema &lt;/li&gt;
&lt;li&gt;off-heap storage, both memory &amp;amp; hard drive&lt;/li&gt;
&lt;li&gt;DataSet: since 1.6&lt;/li&gt;
&lt;li&gt;Spark 2.x: &lt;code&gt;dataframe = dataset[row]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;RDD vs DataFrame vs DataSet&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;rdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nv"&gt;sc&lt;/span&gt;.&lt;span class="nv"&gt;parallelize&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
# &lt;span class="nv"&gt;Conversion&lt;/span&gt;
## &lt;span class="nv"&gt;DF&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;RDD&lt;/span&gt;
&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;car_rdd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;rdd&lt;/span&gt;
## &lt;span class="nv"&gt;RDD&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;DF&lt;/span&gt;
&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;rdd_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;rdd&lt;/span&gt;.&lt;span class="nv"&gt;toDF&lt;/span&gt;
## &lt;span class="nv"&gt;RDD&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;DS&lt;/span&gt;
&lt;span class="nv"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;rdd_ds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;rdd&lt;/span&gt;.&lt;span class="nv"&gt;toDS&lt;/span&gt;

# &lt;span class="nv"&gt;Functions&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;printSchema&lt;/span&gt;  # &lt;span class="nv"&gt;types&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;keys&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;describe&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;cols&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;rdd&lt;/span&gt;.&lt;span class="nv"&gt;filter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;collect&lt;/span&gt;
&lt;span class="nv"&gt;rdd_df&lt;/span&gt;.&lt;span class="nv"&gt;filter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;value &amp;lt; 10&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;span class="nv"&gt;rdd_ds&lt;/span&gt;.&lt;span class="nv"&gt;filter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;value &amp;lt; 10&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;span class="nv"&gt;rdd_ds&lt;/span&gt;.&lt;span class="nv"&gt;filter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;

&lt;span class="nv"&gt;rdd&lt;/span&gt;.&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;collect&lt;/span&gt;
&lt;span class="nv"&gt;rdd_ds&lt;/span&gt;.&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;span class="nv"&gt;rdd_df&lt;/span&gt;.&lt;span class="nv"&gt;map&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;_&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;will&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;work&lt;/span&gt;
&lt;span class="nv"&gt;rdd_df&lt;/span&gt;.&lt;span class="nv"&gt;select&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;value * 2).show&lt;/span&gt;

# &lt;span class="nv"&gt;Spark&lt;/span&gt; &lt;span class="nv"&gt;SQL&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;select&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;$&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;model&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;, $&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;mpg&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;filter&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;mpg &amp;gt; 4&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;groupBy&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;mpg&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;.&lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="ss"&gt;()&lt;/span&gt;.&lt;span class="k"&gt;show&lt;/span&gt;
&lt;span class="nv"&gt;df&lt;/span&gt;.&lt;span class="nv"&gt;createOrReplaceTempView&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;cars&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;spark&lt;/span&gt;.&lt;span class="nv"&gt;sql&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;SELECT col1, col2, ...&lt;/span&gt;
           &lt;span class="nv"&gt;FROM&lt;/span&gt; &lt;span class="nv"&gt;table1&lt;/span&gt;, &lt;span class="nv"&gt;table2&lt;/span&gt;, ...
           [&lt;span class="nv"&gt;WHERE&lt;/span&gt; &lt;span class="nv"&gt;condition1&lt;/span&gt;, &lt;span class="nv"&gt;AND&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;OR&lt;/span&gt; &lt;span class="nv"&gt;condition2&lt;/span&gt; ...]
           [&lt;span class="nv"&gt;GROUPBY&lt;/span&gt; &lt;span class="nv"&gt;col1&lt;/span&gt;, ...]
           [&lt;span class="nv"&gt;ORDERBY&lt;/span&gt; &lt;span class="nv"&gt;col1&lt;/span&gt;, ...]&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;IO in Spark&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;File format&lt;/li&gt;
&lt;li&gt;JSON: schema&lt;/li&gt;
&lt;li&gt;parquet, ORC: JSON with compression&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path prefix&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;default: &lt;code&gt;hdfs:///&lt;/code&gt; -&amp;gt; &lt;code&gt;/tmp/data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;specify: &lt;code&gt;file:///&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file/folder&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;automatically read all files within directory&lt;/li&gt;
&lt;li&gt;use directory to separate data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;existing file&lt;/strong&gt;: &lt;code&gt;mode(error/append/overwrite/ignore)&lt;/code&gt;, default is error&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Read CSV file&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mtcars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c1"&gt;# More Files&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cars.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cars.parquet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;delimiter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cars.tab&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df_json&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cars.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;df_parquet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cars.parquet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Workflow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;prepare datasets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val cars = spark.read.format("csv").option(...).load("path_to_file").selectExpr("mpg + 0.0 as mpg", "cyl + 0.0 as label")&lt;/code&gt;: easy convert to double&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val training = cars.sample(false, fraction)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val test = cars.except(training)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;assemble feature&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val assembler = new VectorAssembler().setInputCols(Array('key1', ...)).setOutputCol('features')&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val lr = new LogisticRegression().setMaxIter(10).setRegParam(0.2).setElasticNetParam(0.0)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;define analysis&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val pipeline = new Pipeline().setStages(Array(assembler, lr))&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;run analysis&lt;/li&gt;
&lt;li&gt;&lt;code&gt;val lrModel = pipeline.fit(training)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;results&lt;/li&gt;
&lt;li&gt;&lt;code&gt;result = lrModel.transform(test).select('model, 'lable, 'prediction)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Spark Architecture&lt;/strong&gt;
&lt;em&gt; Create RDDs
  * HadoopRDD: &lt;code&gt;val lines = sc.textFile("hdfs://names")&lt;/code&gt;
  * MapPartitionsRDD: &lt;code&gt;val kvp = lines.map(name =&amp;gt; (name(0), name))&lt;/code&gt;
  * ShuffledRDD: &lt;code&gt;val groups = kvp.groupByKey()&lt;/code&gt;
  * MapPartitionsRDD: &lt;code&gt;val res = groups.mapvalues(names =&amp;gt; names.toSet.size)&lt;/code&gt;
  * collect()
&lt;/em&gt; RDD Dependency
  * Narrow: One To One
  * Shuffle Dependency: 
&lt;em&gt; DAG(Directed Acyclic Graph) Generation
  * stage 0: HadoopRDD, MapPartitionsRDD
  * stage 1: ShuffledRDD, MapPartitionsRDD
&lt;/em&gt; Schedule Tasks
  * split each stage into tasks based on partition
  * reversed order, recursively find parent stages
  * blocking between stages&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;delay scheduling  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;spark.locality.wait (default 3s)&lt;br&gt;
spark.locality.wait.process&lt;br&gt;
spark.locality.wait.node&lt;br&gt;
spark.locality.wait.rack  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Executor Deployment&lt;/li&gt;
&lt;li&gt;Node&lt;/li&gt;
&lt;li&gt;Process: share physical node&lt;/li&gt;
&lt;li&gt;Thread: share physical memory&lt;blockquote&gt;
&lt;p&gt;Spark YARN mode, in conf/spark-env.sh&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPARK_EXECUTOR_INSTANCES (default 2)  # Process
SPARK_EXECUTOR_CORES (default 1)  # Thread&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;li&gt;Reserved: 300MB, default&lt;/li&gt;
&lt;li&gt;User Memory: 25%, user data structure in RDD (value/variable)&lt;/li&gt;
&lt;li&gt;Execution: internal storage, shuffle buffer on the mapper&lt;ul&gt;
&lt;li&gt;export &lt;code&gt;SPARK_WORKER_MEMORY 96G&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Storage: cache, dynamic, default 0.5 of 75%&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spark.memory.storageFraction&lt;/code&gt; in &lt;code&gt;conf/spark-defaults.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Increase parallelism&lt;ul&gt;
&lt;li&gt;more reducers by setting &lt;code&gt;spark.default.parallelism&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;set number of partitions of the largest parent RDD &lt;code&gt;sc.textFile(path,128)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;YARN: use flag &lt;code&gt;--executor-memory 2g&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="study-notes"></category></entry><entry><title>Scale Computing on Clusters</title><link href="http://dxj4360.uta.cloud/scale-computing-on-clusters.html" rel="alternate"></link><published>2017-04-28T00:00:00-05:00</published><updated>2017-04-28T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-04-28:/scale-computing-on-clusters.html</id><summary type="html">&lt;h2&gt;Configure &amp;amp; utilize HPCs&lt;/h2&gt;
&lt;p&gt;&lt;a href="nirav@email.arizona.edu"&gt;Nirav Merchant&lt;/a&gt; @CyVerseOrg&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;computational thinking&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;4A: Abstraction, Automation, Ability and Audacity&lt;/li&gt;
&lt;li&gt;establish and manage data driven collaborations at global scale&lt;/li&gt;
&lt;li&gt;efficient and coordinated use of CI resources: NSF XSEDE, iPlant, campus HPC and high bandwidth&lt;/li&gt;
&lt;li&gt;adopting best practices: HEP, Life science&lt;/li&gt;
&lt;li&gt;community driven, self-provisioning, extensible and open …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;Configure &amp;amp; utilize HPCs&lt;/h2&gt;
&lt;p&gt;&lt;a href="nirav@email.arizona.edu"&gt;Nirav Merchant&lt;/a&gt; @CyVerseOrg&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;computational thinking&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;4A: Abstraction, Automation, Ability and Audacity&lt;/li&gt;
&lt;li&gt;establish and manage data driven collaborations at global scale&lt;/li&gt;
&lt;li&gt;efficient and coordinated use of CI resources: NSF XSEDE, iPlant, campus HPC and high bandwidth&lt;/li&gt;
&lt;li&gt;adopting best practices: HEP, Life science&lt;/li&gt;
&lt;li&gt;community driven, self-provisioning, extensible and open source: CISE communities&lt;/li&gt;
&lt;li&gt;NSF Infrastructure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data rich and knowledge poor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;NSF XSEDE $121M every 5 year&lt;ul&gt;
&lt;li&gt;support team&lt;/li&gt;
&lt;li&gt;travel support&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Jetstream @ U Indiana&lt;ul&gt;
&lt;li&gt;cmd line, GUI&lt;/li&gt;
&lt;li&gt;DOI, share VMs and then store, publish via IU Scholarworks&lt;/li&gt;
&lt;li&gt;1-44 cpu, OpenStack&lt;/li&gt;
&lt;li&gt;VMs&lt;/li&gt;
&lt;li&gt;Atmosphere web interface&lt;/li&gt;
&lt;li&gt;direct API access via OpenStack cmd line or Horizon&lt;/li&gt;
&lt;li&gt;admin/root&lt;/li&gt;
&lt;li&gt;allocations&lt;/li&gt;
&lt;li&gt;CV for PI, abstract&lt;/li&gt;
&lt;li&gt;Main description&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Technology landscape &lt;/li&gt;
&lt;li&gt;cloud&lt;ul&gt;
&lt;li&gt;image: instance (isolated)&lt;/li&gt;
&lt;li&gt;automation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;containers&lt;ul&gt;
&lt;li&gt;app, bins, libs&lt;/li&gt;
&lt;li&gt;user-end&lt;/li&gt;
&lt;li&gt;docker: docker engine/OS&lt;/li&gt;
&lt;li&gt;singularity&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Toolbox&lt;ul&gt;
&lt;li&gt;Ansible for automation &lt;a href="http://docs.ansible.com/ansible/intro.html"&gt;Ansible&lt;/a&gt;: playbooks, configuration management, deployment, and orchestration&lt;/li&gt;
&lt;li&gt;Docker for execution environment&lt;/li&gt;
&lt;li&gt;Makeflow workqueue for task distribution &lt;a href="http://ccl.cse.nd.edu/software/makeflow/"&gt;makeflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pegasus.isi.edu/"&gt;Pegasus&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;High-constrast imaging in the cloud with klipReduce and Findr&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Jetstream demo&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://use.jetstream-cloud.org"&gt;jetstream homepage&lt;/a&gt;
train56: 091Z67OEe8jE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create Project&lt;/li&gt;
&lt;li&gt;create image(instance)&lt;/li&gt;
&lt;li&gt;visibility&lt;/li&gt;
&lt;li&gt;excluding folders&lt;/li&gt;
&lt;li&gt;build&lt;/li&gt;
&lt;li&gt;launch image&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --rm -p &lt;span class="m"&gt;8888&lt;/span&gt;:8888 -v /home/train56:/home/jovyan/work/ jupyter/datascience-notebook

-it: interactive
--rm: clean after &lt;span class="k"&gt;done&lt;/span&gt;
-v: volumn
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Demand
&lt;em&gt; open innovation, science and collaboration
&lt;/em&gt; complexity of infrastructure
&lt;em&gt; evolving technology landscape
&lt;/em&gt; data/metadata
* extreme information technology -&amp;gt; renew computational platform every x years&lt;/p&gt;
&lt;h3&gt;Docker&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker run -it -p 8888:8888 tensorflow/tensorflow&lt;/code&gt;
&lt;a href="https://hub.docker.com/r/tensorflow/tensorflow/"&gt;tensorflow docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://singularity.lbl.gov/"&gt;singularity&lt;/a&gt;: prepare and configure HPCs&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Spark @ Amazon&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Industrial&lt;/strong&gt;
&lt;em&gt; databricks
&lt;/em&gt; myria
&lt;em&gt; &lt;a href="http://sortbenchmark.org/"&gt;Daytona sort contest&lt;/a&gt;
&lt;/em&gt; gartner: &lt;a href="http://www.gartner.com/technology/research/methodologies/hype-cycle.jsp"&gt;hyper cycle&lt;/a&gt;
  * 2012 
  * 2014
  * 2016&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Techniques&lt;/strong&gt;
&lt;em&gt; MapReduce-based
&lt;/em&gt; HPC cluster computing
* Databases
  * Transactional
    * OLTP
  * Analytic (NoSQL)
    * OLAP
  * Latency
  * CAP Theorem&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Partioned data&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Availability
Consistency&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;hadoop REDUNDANCY: default 3, for fault torelance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Amazon demo&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://console.aws.amazon.com/console/home"&gt;AWS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;S3: distributed storage &lt;/li&gt;
&lt;li&gt;EMR: hadoop framework &lt;ul&gt;
&lt;li&gt;create cluster&lt;/li&gt;
&lt;li&gt;hadoop, HBase, Presto, Spark&lt;/li&gt;
&lt;li&gt;instance&lt;/li&gt;
&lt;li&gt;type m4.large&lt;/li&gt;
&lt;li&gt;number: 1 master and x core nodes&lt;/li&gt;
&lt;li&gt;inbound: allow ip&lt;/li&gt;
&lt;li&gt;Zeppelin: notebook format &lt;code&gt;json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;pyspark&lt;/span&gt;
&lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parallelize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# `from pyspark.context import SparkContest as sc` in python&lt;/span&gt;

&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;takeSample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatmap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# tuble to list&lt;/span&gt;
&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repartition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupByKey&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduceByKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s3://path_to_file&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;  &lt;span class="c1"&gt;# user-defined paramter&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;LSST, avoid lambda function
Spark: lazy, not computing until request data&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;XSEDE by TACC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resources&lt;/li&gt;
&lt;li&gt;HPC&lt;/li&gt;
&lt;li&gt;ECSS: Extended Collaborative Support Service&lt;/li&gt;
&lt;li&gt;Science Gateways&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.globus.org/"&gt;globus connect&lt;/a&gt;&lt;/p&gt;</content><category term="study-notes"></category></entry><entry><title>MPI Foundations @ TACC</title><link href="http://dxj4360.uta.cloud/mpi-foundations-tacc.html" rel="alternate"></link><published>2017-04-14T00:00:00-05:00</published><updated>2017-04-14T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-04-14:/mpi-foundations-tacc.html</id><summary type="html">&lt;p&gt;Contact: &lt;a href="eijkhout@tacc.utexas.edu"&gt;Victor Eijkhout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Res:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EMPvXAHGn6o"&gt;Webcast I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WpzBQcsdgkc"&gt;webcast II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://public.etherpad-mozilla.org/p/20170414-MPI-Foundations-I"&gt;Discussion I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://public.etherpad-mozilla.org/p/20170414-MPI-Foundations-II"&gt;Discussion II&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Terminology&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Socket: the processor chip&lt;/li&gt;
&lt;li&gt;Processor: we don’t use that word&lt;/li&gt;
&lt;li&gt;Core: one instruction-stream processing unit &lt;/li&gt;
&lt;li&gt;Process: preferred terminology in talking about MPI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SPMD model: &lt;code&gt;simple program multiple data&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;MPI&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt;: declarnation &lt;/p&gt;
&lt;p&gt;Collectives&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gathering&lt;/li&gt;
&lt;li&gt;reduction: reduce, n …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Contact: &lt;a href="eijkhout@tacc.utexas.edu"&gt;Victor Eijkhout&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Res:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EMPvXAHGn6o"&gt;Webcast I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WpzBQcsdgkc"&gt;webcast II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://public.etherpad-mozilla.org/p/20170414-MPI-Foundations-I"&gt;Discussion I&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://public.etherpad-mozilla.org/p/20170414-MPI-Foundations-II"&gt;Discussion II&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Terminology&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Socket: the processor chip&lt;/li&gt;
&lt;li&gt;Processor: we don’t use that word&lt;/li&gt;
&lt;li&gt;Core: one instruction-stream processing unit &lt;/li&gt;
&lt;li&gt;Process: preferred terminology in talking about MPI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SPMD model: &lt;code&gt;simple program multiple data&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;MPI&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt;: declarnation &lt;/p&gt;
&lt;p&gt;Collectives&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gathering&lt;/li&gt;
&lt;li&gt;reduction: reduce, n to 1  &lt;code&gt;MPI_Reduce&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;gather: collect, subset to one set&lt;/li&gt;
&lt;li&gt;Spreading&lt;/li&gt;
&lt;li&gt;broadcast: identical, 1 to n&lt;/li&gt;
&lt;li&gt;scatter: subsetting &lt;code&gt;MPI_Scatterv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;MPI_Reduce&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;send_data&lt;/span&gt;, # &lt;span class="nv"&gt;use&lt;/span&gt; &lt;span class="nv"&gt;buffer&lt;/span&gt;, &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt;
    &lt;span class="nv"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;recv_data&lt;/span&gt;,
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;, # &lt;span class="nv"&gt;size&lt;/span&gt; &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;
    &lt;span class="nv"&gt;MPI_Datatype&lt;/span&gt; &lt;span class="nv"&gt;datatype&lt;/span&gt;,
    &lt;span class="nv"&gt;MPI_Op&lt;/span&gt; &lt;span class="nv"&gt;op&lt;/span&gt;,
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt;, # &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;needed&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;MPI_Allreduce&lt;/span&gt;
    &lt;span class="nv"&gt;MPI_Comm&lt;/span&gt; &lt;span class="nv"&gt;communicator&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;MPI_Gather&lt;/span&gt;&lt;span class="ss"&gt;(&lt;/span&gt;
   &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;sendbuf&lt;/span&gt;, &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sendcnt&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Datatype&lt;/span&gt; &lt;span class="nv"&gt;sendtype&lt;/span&gt;,
   &lt;span class="nv"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;recvbuf&lt;/span&gt;, &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;recvcnt&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Datatype&lt;/span&gt; &lt;span class="nv"&gt;recvtype&lt;/span&gt;,
   &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Comm&lt;/span&gt; &lt;span class="nv"&gt;comm&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;

&lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;MPI_Scatter&lt;/span&gt;
   &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;sendbuf&lt;/span&gt;, &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;sendcount&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Datatype&lt;/span&gt; &lt;span class="nv"&gt;sendtype&lt;/span&gt;,
    &lt;span class="nv"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nv"&gt;recvbuf&lt;/span&gt;, &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;recvcount&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Datatype&lt;/span&gt; &lt;span class="nv"&gt;recvtype&lt;/span&gt;,
    &lt;span class="nv"&gt;int&lt;/span&gt; &lt;span class="nv"&gt;root&lt;/span&gt;, &lt;span class="nv"&gt;MPI_Comm&lt;/span&gt; &lt;span class="nv"&gt;comm&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;MPI_MAX - Returns the maximum element.&lt;/li&gt;
&lt;li&gt;MPI_MIN - Returns the minimum element.&lt;/li&gt;
&lt;li&gt;MPI_SUM - Sums the elements.&lt;/li&gt;
&lt;li&gt;MPI_PROD - Multiplies all elements.&lt;/li&gt;
&lt;li&gt;MPI_LAND - Performs a logical and across the elements.&lt;/li&gt;
&lt;li&gt;MPI_LOR - Performs a logical or across the elements.&lt;/li&gt;
&lt;li&gt;MPI_BAND - Performs a bitwise and across the bits of the elements.&lt;/li&gt;
&lt;li&gt;MPI_BOR - Performs a bitwise or across the bits of the elements.&lt;/li&gt;
&lt;li&gt;MPI_MAXLOC - Returns the maximum value and the rank of the process that owns it.&lt;/li&gt;
&lt;li&gt;MPI_MINLOC - Returns the minimum value and the rank of the process that owns it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;buffer&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;void pointer&lt;/code&gt;: memory address of the data&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;write &amp;amp;x or (void*) &amp;amp;x for scalar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;comm.recv, slow but python object; comm.Recv, fast&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mpitutorial.com/tutorials/mpi-reduce-and-allreduce/"&gt;find max random number with Reduce&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Scan or 'parallel prefix'&lt;/h3&gt;
&lt;h3&gt;&lt;em&gt;Barrier&lt;/em&gt;: Synchronize procs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;almost never needed&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;only for timing&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Naive realization&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;root to all &lt;span class="math"&gt;\(\alpha + \beta*n\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;better, p2p&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Distributed data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;local_index + rank&lt;/li&gt;
&lt;li&gt;global_index&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Load balancing&lt;/h3&gt;
&lt;p&gt;&lt;span class="math"&gt;\(f(i) = \floor(iN/p)\)&lt;/span&gt;
given proc &lt;span class="math"&gt;\(i\)&lt;/span&gt;: &lt;span class="math"&gt;\([f(i),f(i+1)]\)&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Local info. exchange&lt;/h3&gt;
&lt;p&gt;Matrices in parallel: distribute domain, not the matrix&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;p2p: ping-pong&lt;/strong&gt;
&lt;em&gt; two side: A &amp;amp; B
&lt;/em&gt; match: send &amp;amp; recv&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MPI_Send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb nb-Type"&gt;void&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MPI_Datatype&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;datatype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb nb-Type"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MPI_Comm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Semantics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;address&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;negative&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;datatype&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;datatype&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;element&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rank&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;destination&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;IN&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;comm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;communicator&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://mpitutorial.com/tutorials/mpi-send-and-receive/"&gt;send &amp;amp; recv&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;communication across nodes is x100 slower than within nodes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Blocking&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;send &amp;amp; recv are blocking operations&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deadlock&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;receive&lt;/span&gt;
&lt;span class="k"&gt;send&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;might work&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;send&lt;/span&gt;
&lt;span class="nv"&gt;receive&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Bypass blocking&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;odds &amp;amp; evens: exchange sort, compare-and-swap&lt;/li&gt;
&lt;li&gt;pairwise exchange&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Non-blocking&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;isend, irecv&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;need &lt;code&gt;MPI_Wait&lt;/code&gt; as blocking to refresh the buffer; buffer is safe in blocking comm.
&lt;code&gt;Latency hiding&lt;/code&gt;: don't need to hold until comm is done
&lt;code&gt;TEST&lt;/code&gt;: non-blacking wait, do local work if no incoming msg by test&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;More&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;MPI_Bsend, MPI_Ibsend: buffered send&lt;/li&gt;
&lt;li&gt;MPI_Ssend, MPI_Issend: synchronous send&lt;/li&gt;
&lt;li&gt;MPI_Rsend, MPI_Irsend: ready send&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;One-sided communication: ‘just’ put/get the data somewhere &lt;/li&gt;
&lt;li&gt;Derived data types: send strided/irregular/inhomogeneous data &lt;/li&gt;
&lt;li&gt;Sub-communicators: work with subsets of MPI_COMM_WORLD &lt;/li&gt;
&lt;li&gt;I/O: efficient file operations&lt;/li&gt;
&lt;li&gt;Non-blocking collectives&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="study-notes"></category></entry><entry><title>Data Management @ TACC</title><link href="http://dxj4360.uta.cloud/data-management-tacc.html" rel="alternate"></link><published>2017-04-06T00:00:00-05:00</published><updated>2017-04-06T00:00:00-05:00</updated><author><name>Dongming Jin</name></author><id>tag:dxj4360.uta.cloud,2017-04-06:/data-management-tacc.html</id><summary type="html">&lt;p&gt;&lt;code&gt;data@tacc.utexas.edu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;by &lt;strong&gt;Chris Jordan&lt;/strong&gt; &lt;code&gt;ctjordan@tacc.utexas.edu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=HvAM7RrwQLg"&gt;Webcast&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://public.etherpad-mozilla.org/p/Data_Management_At_TACC"&gt;Discussion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portal.tacc.utexas.edu/training#/session/45"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Life cycle of the data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generation for specific purposes&lt;/li&gt;
&lt;li&gt;Creation of metadata&lt;/li&gt;
&lt;li&gt;Direct use in research/experimentation &lt;/li&gt;
&lt;li&gt;Selection and Publication of data&lt;/li&gt;
&lt;li&gt;Retirement of inaccurate/outmoded data&lt;/li&gt;
&lt;li&gt;Archival of not immediately useful data &lt;/li&gt;
&lt;li&gt;Long-term preservation&lt;/li&gt;
&lt;li&gt;Incorporation …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;data@tacc.utexas.edu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;by &lt;strong&gt;Chris Jordan&lt;/strong&gt; &lt;code&gt;ctjordan@tacc.utexas.edu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=HvAM7RrwQLg"&gt;Webcast&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://public.etherpad-mozilla.org/p/Data_Management_At_TACC"&gt;Discussion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://portal.tacc.utexas.edu/training#/session/45"&gt;Slides&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Life cycle of the data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Generation for specific purposes&lt;/li&gt;
&lt;li&gt;Creation of metadata&lt;/li&gt;
&lt;li&gt;Direct use in research/experimentation &lt;/li&gt;
&lt;li&gt;Selection and Publication of data&lt;/li&gt;
&lt;li&gt;Retirement of inaccurate/outmoded data&lt;/li&gt;
&lt;li&gt;Archival of not immediately useful data &lt;/li&gt;
&lt;li&gt;Long-term preservation&lt;/li&gt;
&lt;li&gt;Incorporation into larger repositories&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Open Access, multi-collection repositories&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Collection Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;dated, type doc&lt;/li&gt;
&lt;li&gt;consistent in structure&lt;/li&gt;
&lt;li&gt;linkage to background/foreground&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;internal conventions, i.e. norms&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data Management Plan&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data Type&lt;/h2&gt;
&lt;h3&gt;Structured&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SQL/RDBMS&lt;/li&gt;
&lt;li&gt;semi-structured, HTML/XML&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Unstructured&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;images, audio, mesh data...&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;HDF5 - Hierarchical Data Formats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;self-description&lt;/li&gt;
&lt;li&gt;inclusion of metadata&lt;/li&gt;
&lt;li&gt;coherence in storing output data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Metadata&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;metadata&lt;/code&gt;: data about data, &lt;em&gt;header&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Provenance: "audit trail" for research&lt;/li&gt;
&lt;li&gt;Reproducibility&lt;/li&gt;
&lt;li&gt;Observational data: date/time/sensor...&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Simulational: software, hardware, exec. params.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;crucial to record AEarlyAP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;automate extraction/creation&lt;/li&gt;
&lt;li&gt;enforce good recording&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Archiving Research Data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Repositories&lt;ul&gt;
&lt;li&gt;centralized&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Accessibility&lt;ul&gt;
&lt;li&gt;maintainace and performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Evolving&lt;ul&gt;
&lt;li&gt;flexibility to configure&lt;/li&gt;
&lt;li&gt;seamless transition&lt;/li&gt;
&lt;li&gt;long-term agreement&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Publish-ability &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale of data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Preparation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;map of data&lt;/li&gt;
&lt;li&gt;mapping as processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Execution&lt;ul&gt;
&lt;li&gt;follow practices &amp;amp; permission&lt;/li&gt;
&lt;li&gt;collective note/database/workflow&lt;/li&gt;
&lt;li&gt;batch data management scripts&lt;/li&gt;
&lt;li&gt;cron to automate permissions &amp;amp; movement&lt;/li&gt;
&lt;li&gt;use logs/job output&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;multiple backup&lt;br&gt;
don't use personal hard drive&lt;br&gt;
don't use commercial "cloud" as primary data store&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://bluewaters.ncsa.illinois.edu/webinars"&gt;Workflow Management tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;TACC Stockyard&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$work&lt;/code&gt;: 1TB/2TB by request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;project-term&lt;/code&gt;: 1 year storage&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$scratch&lt;/code&gt;: computational work&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$home&lt;/code&gt;: personal files&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Corral&lt;/code&gt;: 5TB free, open web access, persistent DNS/Web for long-lived URLs, VMs as backend&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://www.fishesoftexas.org&lt;br&gt;
http://arctos.database.museum&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Ranch&lt;/code&gt;: 160PB for personal Archive&lt;/p&gt;
&lt;p&gt;&lt;code&gt;XSEDE/Wranger&lt;/code&gt;: 500TB flash HP storage&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GridFTP/Globus Online&lt;/code&gt;: web-based, graphical interfaces, useful for XSEDE&lt;/p&gt;
&lt;p&gt;&lt;code&gt;iRODS&lt;/code&gt;: APIS, web/GUI/cmd, automated enforcement&lt;/p&gt;
&lt;h2&gt;Get Help&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://portal.tacc.utexas.edu/tacc-consulting/-/consult/tickets/create"&gt;Tickets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://portal.xsede.org/help-desk"&gt;Help Desk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="study-notes"></category></entry></feed>